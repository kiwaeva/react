{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E\\\\Desktop\\\\intro-to-react\\\\create-react-app-way\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport CountButton from \"./CountButton/CountButton\"; // const products = [\n//   \"tooth paste\",\n//   \"tooth brush\",\n//   \"mouth wash\",\n//   \"dental floss\",\n//   \"mouth guard\"\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [productsState, setProductsState] = useState([]);\n  useEffect(() => {\n    fetch('https://fakestoreapi.com/products').then(res => res.json()).then(productsArray => {\n      const newProductsState = productsArray.map(product => {\n        return product.title;\n      });\n      setProductsState(newProductsState);\n    });\n    setTimeout(() => {\n      setProductsState([\"tooth paste\", \"tooth brush\", \"mouth wash\", \"dental floss\", \"mouth guard\"]);\n    }, 2000);\n  }, []);\n  const hasProducts = productsState.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hasProducts ? /*#__PURE__*/_jsxDEV(SearchBar, {\n      products: productsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }, this) : \"Loading...\", /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 1,\n      buttonColor: 'blue'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 5,\n      buttonColor: 'green'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 7,\n      buttonColor: 'yellow'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"GbIfjci7PtxGrG54j6SIHYmdt98=\");\n\n_c = App;\nexport default App; //props is a value that you pass into a component to inform what it does e.g. incrementBy\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/E/Desktop/intro-to-react/create-react-app-way/src/components/App.js"],"names":["React","useEffect","useState","SearchBar","CountButton","App","productsState","setProductsState","fetch","then","res","json","productsArray","newProductsState","map","product","title","setTimeout","hasProducts","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACIC,IADJ,CACUC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADlB,EAEIF,IAFJ,CAEUG,aAAD,IAAmB;AACrB,YAAMC,gBAAgB,GAAGD,aAAa,CAACE,GAAd,CAAmBC,OAAD,IAAY;AACnD,eAAOA,OAAO,CAACC,KAAf;AACH,OAFwB,CAAzB;AAGAT,MAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AACC,KAPR;AAUAI,IAAAA,UAAU,CAAC,MAAM;AACbV,MAAAA,gBAAgB,CAAC,CACb,aADa,EAEb,aAFa,EAGb,YAHa,EAIb,cAJa,EAKb,aALa,CAAD,CAAhB;AAOH,KARS,EAQP,IARO,CAAV;AASH,GArBQ,EAqBP,EArBO,CAAT;AAuBA,QAAMW,WAAW,GAAGZ,aAAa,CAACa,MAAd,GAAuB,CAA3C;AAEA,sBACI;AAAA,eAEMD,WAAW,gBAAI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEZ;AAArB;AAAA;AAAA;AAAA;AAAA,YAAJ,GAA4C,YAF7D,eAUI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5CD;;GAAMD,G;;KAAAA,G;AA8CN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport SearchBar from \"./SearchBar/SearchBar\"\r\nimport CountButton from \"./CountButton/CountButton\"\r\n\r\n// const products = [\r\n//   \"tooth paste\",\r\n//   \"tooth brush\",\r\n//   \"mouth wash\",\r\n//   \"dental floss\",\r\n//   \"mouth guard\"\r\n// ]\r\nconst App = () => {\r\n    const [productsState, setProductsState] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('https://fakestoreapi.com/products')\r\n           .then((res) => res.json())\r\n           .then((productsArray) => {\r\n               const newProductsState = productsArray.map((product) =>{\r\n                   return product.title\r\n               })\r\n               setProductsState(newProductsState)\r\n               })\r\n  \r\n\r\n        setTimeout(() => {\r\n            setProductsState([\r\n                \"tooth paste\",\r\n                \"tooth brush\",\r\n                \"mouth wash\",\r\n                \"dental floss\",\r\n                \"mouth guard\",\r\n            ])\r\n        }, 2000)\r\n    },[])\r\n\r\n    const hasProducts = productsState.length > 0\r\n\r\n    return (\r\n        <div>\r\n            {/* TURINARY OPERATOR BELOW.. instead of loading you can put loading giff there*/}\r\n             {hasProducts ?  <SearchBar products={productsState}/> : \"Loading...\" }\r\n           \r\n            {/* <SearchBar products={[\r\n                \"hat\",\r\n                \"gloves\",\r\n                \"scarf\"\r\n            ]}/> */}\r\n\r\n            <CountButton incrementBy={1} buttonColor={'blue'}/>\r\n            <CountButton incrementBy={5} buttonColor={'green'}/>\r\n            <CountButton incrementBy={7} buttonColor={'yellow'}/>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default App \r\n\r\n//props is a value that you pass into a component to inform what it does e.g. incrementBy"]},"metadata":{},"sourceType":"module"}