{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E\\\\Desktop\\\\intro-to-react\\\\create-react-app-way\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './SearchBar.css'; // const products = [\n//   \"tooth paste\",\n//   \"tooth brush\",\n//   \"mouth wash\",\n//   \"dental floss\",\n//   \"mouth guard\"\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleInputChange = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClearClick = () => {\n    setSearchValue(\"\"); //state\n  };\n\n  const shouldDisplayButton = searchValue.length > 0;\n  const filteredProducts = products.filter(product => {\n    return product.includes(searchValue);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), shouldDisplayButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearClick,\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: filteredProducts.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: product\n        }, product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"F12Wsjogj0HVecr0VGWn/MCEg+A=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/E/Desktop/intro-to-react/create-react-app-way/src/components/SearchBar/SearchBar.js"],"names":["React","useState","SearchBar","searchValue","setSearchValue","handleInputChange","event","target","value","handleClearClick","shouldDisplayButton","length","filteredProducts","products","filter","product","includes","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,iBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMI,iBAAiB,GAAIC,KAAD,IAAW;AACnCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,cAAc,CAAC,EAAD,CAAd,CAD6B,CACV;AACpB,GAFD;;AAIA,QAAMM,mBAAmB,GAAGP,WAAW,CAACQ,MAAZ,GAAqB,CAAjD;AAEA,QAAMC,gBAAgB,GAAGC,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAa;AAClD,WAAOA,OAAO,CAACC,QAAR,CAAiBb,WAAjB,CAAP;AACH,GAFwB,CAAzB;AAIA,sBACE;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEA,WAA1B;AAAuC,MAAA,QAAQ,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKK,mBAAmB,iBAAI;AAAQ,MAAA,OAAO,EAAED,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF5B,oBAII;AAAA,gBACCG,gBAAgB,CAACK,GAAjB,CAAsBF,OAAD,IAAW;AAC/B,4BAAO;AAAA,oBAAmBA;AAAnB,WAASA,OAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7BD;;GAAMb,S;;KAAAA,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport './SearchBar.css'\r\n\r\n// const products = [\r\n//   \"tooth paste\",\r\n//   \"tooth brush\",\r\n//   \"mouth wash\",\r\n//   \"dental floss\",\r\n//   \"mouth guard\"\r\n// ]\r\n\r\nconst SearchBar = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n  const handleInputChange = (event) => {\r\n    setSearchValue(event.target.value)\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    setSearchValue(\"\") //state\r\n  }\r\n\r\n  const shouldDisplayButton = searchValue.length > 0\r\n\r\n  const filteredProducts = products.filter((product) => {\r\n      return product.includes(searchValue)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n        <input type=\"text\" value={searchValue} onChange={handleInputChange}/>\r\n        {shouldDisplayButton && <button onClick={handleClearClick}>clear</button>} {/*short circuiting/conditional rendering*/}\r\n\r\n        <ol>\r\n        {filteredProducts.map((product)=>{\r\n          return <li key={product}>{product}</li>\r\n        })}\r\n        </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}