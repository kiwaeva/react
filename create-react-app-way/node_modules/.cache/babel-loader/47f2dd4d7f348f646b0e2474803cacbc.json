{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E\\\\Desktop\\\\intro-to-react\\\\create-react-app-way\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport CountButton from \"./CountButton/CountButton\";\nimport Button from \"./Button/Button\"; // const products = [\n//   \"tooth paste\",\n//   \"tooth brush\",\n//   \"mouth wash\",\n//   \"dental floss\",\n//   \"mouth guard\"\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [productsState, setProductsState] = useState([]);\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\") //fetching data from API\n    .then(res => res.json()).then(productsArray => {\n      const newProductsState = productsArray.map(product => {\n        return product.title;\n      });\n      setProductsState(newProductsState);\n    }); // setTimeout(() => {\n    //     setProductsState([\n    //         \"tooth paste\",\n    //         \"tooth brush\",\n    //         \"mouth wash\",\n    //         \"dental floss\",\n    //         \"mouth guard\",\n    //     ])\n    // }, 2000)\n  }, []);\n  const hasProducts = productsState.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hasProducts ? /*#__PURE__*/_jsxDEV(SearchBar, {\n      products: productsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this) : \"Loading...\", /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 1,\n      buttonColor: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 5,\n      buttonColor: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CountButton, {\n      incrementBy: 7,\n      buttonColor: \"yellow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Subscribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"GbIfjci7PtxGrG54j6SIHYmdt98=\");\n\n_c = App;\nexport default App; //props is a value that you pass into a component to inform what it does e.g. incrementBy\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/E/Desktop/intro-to-react/create-react-app-way/src/components/App.js"],"names":["React","useEffect","useState","SearchBar","CountButton","Button","App","productsState","setProductsState","fetch","then","res","json","productsArray","newProductsState","map","product","title","hasProducts","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2C;AAA3C,KACEC,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,aAAD,IAAmB;AACxB,YAAMC,gBAAgB,GAAGD,aAAa,CAACE,GAAd,CAAmBC,OAAD,IAAa;AACvD,eAAOA,OAAO,CAACC,KAAf;AACA,OAFwB,CAAzB;AAGAT,MAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AACA,KAPF,EADe,CAUf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,QAAMI,WAAW,GAAGX,aAAa,CAACY,MAAd,GAAuB,CAA3C;AAEA,sBACC;AAAA,eAEED,WAAW,gBAAG,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,YAAH,GAA4C,YAFzD,eAUC,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAVD,eAWC,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAXD,eAYC,QAAC,WAAD;AAAa,MAAA,WAAW,EAAE,CAA1B;AAA6B,MAAA,WAAW,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAZD,eAaC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAcC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD,eAeC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmBA,CA7CD;;GAAMD,G;;KAAAA,G;AA+CN,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./SearchBar/SearchBar\";\r\nimport CountButton from \"./CountButton/CountButton\";\r\nimport Button from \"./Button/Button\";\r\n\r\n// const products = [\r\n//   \"tooth paste\",\r\n//   \"tooth brush\",\r\n//   \"mouth wash\",\r\n//   \"dental floss\",\r\n//   \"mouth guard\"\r\n// ]\r\nconst App = () => {\r\n\tconst [productsState, setProductsState] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"https://fakestoreapi.com/products\") //fetching data from API\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((productsArray) => {\r\n\t\t\t\tconst newProductsState = productsArray.map((product) => {\r\n\t\t\t\t\treturn product.title;\r\n\t\t\t\t});\r\n\t\t\t\tsetProductsState(newProductsState);\r\n\t\t\t});\r\n\r\n\t\t// setTimeout(() => {\r\n\t\t//     setProductsState([\r\n\t\t//         \"tooth paste\",\r\n\t\t//         \"tooth brush\",\r\n\t\t//         \"mouth wash\",\r\n\t\t//         \"dental floss\",\r\n\t\t//         \"mouth guard\",\r\n\t\t//     ])\r\n\t\t// }, 2000)\r\n\t}, []);\r\n\r\n\tconst hasProducts = productsState.length > 0;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* TURINARY OPERATOR BELOW.. instead of loading you can put loading giff there*/}\r\n\t\t\t{hasProducts ? <SearchBar products={productsState} /> : \"Loading...\"}\r\n\r\n\t\t\t{/* <SearchBar products={[\r\n                \"hat\",\r\n                \"gloves\",\r\n                \"scarf\"\r\n            ]}/> */}\r\n\r\n\t\t\t<CountButton incrementBy={1} buttonColor={\"blue\"} />\r\n\t\t\t<CountButton incrementBy={5} buttonColor={\"green\"} />\r\n\t\t\t<CountButton incrementBy={7} buttonColor={\"yellow\"} />\r\n\t\t\t<Button>Subscribe</Button>\r\n\t\t\t<Button>Post</Button>\r\n\t\t\t<Button>Send</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n\r\n//props is a value that you pass into a component to inform what it does e.g. incrementBy\r\n"]},"metadata":{},"sourceType":"module"}